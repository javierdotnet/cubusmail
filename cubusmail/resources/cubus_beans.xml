<?xml version="1.0" encoding="UTF-8"?>

<beans default-autowire="no"
	xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="file:${cubus.config}" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="global" />
	</bean>

	<bean id="messageHandler" class="com.cubusmail.mail.MessageHandler"
		scope="prototype">
		<property name="charset" value="ISO-8859-1" />
		<property name="subjectEncoding" value="Q" />
	</bean>

	<bean id="userAccount" class="com.cubusmail.gwtui.domain.UserAccount"
		scope="prototype">
		<property name="preferences" ref="preferencesBean" />
	</bean>

	<bean id="identity" class="com.cubusmail.gwtui.domain.Identity"
		scope="prototype">
	</bean>

	<bean id="preferencesBean" class="com.cubusmail.gwtui.domain.Preferences"
		scope="prototype">
		<!-- default values -->
		<property name="language" value="en" />
		<property name="timezone" value="MEZ" />
		<property name="inboxFolderName" value="${cubus.mail.inboxFolderName}" />
		<property name="draftFolderName" value="${cubus.mail.draftFolderName}" />
		<property name="sentFolderName" value="${cubus.mail.sentFolderName}" />
		<property name="trashFolderName" value="${cubus.mail.trashFolderName}" />
		<property name="messagesReloadPeriod" value="300000" />
		<property name="pageCount" value="100" />
		<property name="shortTimeFormat" value="false" />
		<property name="showHtml" value="true" />
		<property name="createHtmlMsgs" value="true" />
		<property name="markAsDeletedWithoutTrash" value="true" />
		<property name="theme" value="Aero Glass" />
		<property name="emptyTrashAfterLogout" value="false" />
		<property name="readingPane" value="0" />
	</bean>


	<bean id="mailboxFactory" class="com.cubusmail.mail.MailboxFactory"
		scope="singleton">
		<property name="mailboxMap">
			<map>
				<entry key="imap" value="imapMailbox" />
			</map>
		</property>
	</bean>

	<bean id="imapMailbox" class="com.cubusmail.mail.imap.IMAPMailbox"
		scope="prototype">
		<property name="imapFetchsize" value="${cubus.mail.imapFetchsize}" />
		<property name="imapPartialfetch" value="${cubus.mail.imapPartialfetch}" />
		<property name="imapSSL" value="${cubus.mail.imapSSL}" />
		<property name="imapHost" value="${cubus.mail.imapHost}" />
		<property name="imapPort" value="${cubus.mail.imapPort}" />
		<property name="smtpSSL" value="${cubus.mail.smtpSSL}" />
		<property name="smtpHost" value="${cubus.mail.smtpHost}" />
		<property name="smtpPort" value="${cubus.mail.smtpPort}" />
		<property name="domainName" value="${cubus.mail.domainName}" />
		<property name="mailboxAuthenticator" ref="mailboxAuthenticator" />
	</bean>
	
	<bean id="imapMailFolder" class="com.cubusmail.mail.imap.IMAPMailFolder" scope="prototype">
	</bean>

	<bean id="mailboxAuthenticator" class="com.cubusmail.mail.security.MailboxAuthenticator"
		scope="prototype">
		<property name="mailPasswordEncryptor" ref="mailPasswordEncryptor" />
	</bean>

	<bean id="mailPasswordEncryptor" class="com.cubusmail.mail.security.MailPasswordEncryptor"
		scope="singleton" init-method="init">
		<property name="algorithm" value="RSA" />
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
		<!-- property name="cacheQueries" value="true" /-->
	</bean>

	<!-- Hibernate configuration -->
	<bean id="userAccountDao" class="com.cubusmail.user.UserAccountDao"
		scope="singleton">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.cubusmail.gwtui.domain.UserAccount
				</value>
				<value>com.cubusmail.gwtui.domain.Identity
				</value>
				<value>com.cubusmail.gwtui.domain.ContactFolder
				</value>
				<value>com.cubusmail.gwtui.domain.Contact
				</value>
				<value>com.cubusmail.gwtui.domain.ContactAddress
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect
				</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.jdbc.batch_size">0</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
			</props>
		</property>
	</bean>


	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${cubus.db.driverClass}" />
		<property name="jdbcUrl" value="${cubus.db.jdbcUrl}" />
		<property name="user" value="${cubus.db.user}" />
		<property name="password" value="${cubus.db.password}" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="pojoStore"
		class="net.sf.hibernate4gwt.core.store.stateless.StatelessPojoStore" />

	<bean id="hibernateBeanManager" class="net.sf.hibernate4gwt.core.HibernateBeanManager">
		<property name="pojoStore" ref="pojoStore" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
</beans>